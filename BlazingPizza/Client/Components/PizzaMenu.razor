@page "/menu"
@using BlazingPizza.Shared.Models
@inject HttpClient HttpClient

<h3>Pizza Menu</h3>

<div class="pizza-menu">
    @if (pizzas == null || !pizzas.Any())
    {
        <p>Loading pizzas...</p>
    }
    else
    {
        @foreach (var pizza in pizzas)
        {
            <div class="pizza-item">
                <img src="@pizza.ImageUrl" alt="@pizza.Name" />
                <h4>@pizza.Name</h4>
                <p>@pizza.Description</p>
                <p><strong>Price:</strong> $@pizza.Price</p>
                <button class="add-to-cart-btn" @onclick="() => AddToCart(pizza)">Añadir al Carrito</button>
            </div>
        }
    }
</div>

@code {
    private List<Pizza>? pizzas;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            pizzas = await HttpClient.GetFromJsonAsync<List<Pizza>>("api/pizza");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching pizzas: {ex.Message}");
        }
    }

    private async Task AddToCart(Pizza pizza)
    {
        var item = new CartItem
            {
                PizzaId = pizza.Id, // Solo envía el ID
                Quantity = 1
            };

        var response = await HttpClient.PostAsJsonAsync("api/cart/add", item);

        if (response.IsSuccessStatusCode)
        {
            Console.WriteLine("¡Pizza añadida al carrito!");
        }
        else
        {
            Console.WriteLine($"Error: {response.StatusCode}");
        }
    }
}




